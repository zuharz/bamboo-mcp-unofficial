name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build MCP Server
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 30
          
  build-dxt:
    name: Build DXT Package
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build DXT package
        run: |
          chmod +x scripts/build-dxt.sh
          ./scripts/build-dxt.sh
        
      - name: Upload DXT package
        uses: actions/upload-artifact@v4
        with:
          name: bamboohr-mcp-dxt
          path: bamboohr-mcp.dxt
          retention-days: 90
          
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, build-dxt]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download DXT artifact
        uses: actions/download-artifact@v4
        with:
          name: bamboohr-mcp-dxt
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bamboohr-mcp.dxt
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}